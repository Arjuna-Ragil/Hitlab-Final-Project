<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Home Page</title>
  <link rel="icon" type="image/x-icon" href="/image/favicon (1).ico">
  <style>
    body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f4f4f4;
    }

    .container {
    width: 100%;
    height: 100%;
    background-color: #FF8500;
    }

    .header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 20px;
    }

    .logo {
    color: #333;
    }

    .search-bar {
    display: flex;
    align-items: center;
    }

    .search-input {
    width: 200px;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    }

    .profile-photo {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    margin-left: 20px;
    }

    .content {
    display: flex;
    }

    .left-column {
    width: 30%;
    padding: 20px;
    border: 1px solid #ccc;
    border-radius: 5px;
    background-color: white;
    }

    .right-column {
    width: 65%;
    padding: 20px;
    border: 1px solid #ccc;
    background-color: white;
    border-radius: 5px;
    }

    .job-listings {
    margin-top: 20px;
    }

    .job-listing {
    padding: 15px;
    border: 1px solid #ddd;
    border-radius: 5px;
    margin-bottom: 10px;
    background-color: #fff;
    }

    .footer {
    text-align: center;
    margin-top: 20px;
    font-size: 12px;
    color: black;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <div class="logo">
        <img
          src="/Hitlab-Final-Project/public/image/logo and text.png"
          alt="error"
          width="150px"
        />
      </div>
      <div class="search-bar">
        <input
          type="text"
          class="search-input"
          placeholder="Search jobs..."
        />
        <img src="profile.jpg" alt="Profile" class="profile-photo" />
      </div>
    </div>
    <div class="content">
      <div class="left-column">
        <h3>Profile</h3>
        <ul>
          <li>Nama:</li>
          <li>Moto Profesional:</li>
          <li>Kota:</li>
          <li>Pendidikan:</li>
        </ul>
      </div>
      <div class="right-column">
        <h2>Job Listings</h2>
        <div class="job-listings"></div>
        <form id="jobForm">
          <input type="text" id="jobInput" placeholder="Nama Perusahaan" required />
          <input type="text" id="jobDescription" placeholder="Posisi Pekerjaan" required />
          <input type="number" id="jobSalary" placeholder="Gaji" required />
          <button type="submit">Create</button>
        </form>
        <div class="job-listings" id="jobListings"></div>
      </div>
    </div>
  </div>
  <script>
    const API_URL = 'http://localhost:5000/api/jobs';
    const jobForm = document.getElementById('jobForm');
    const jobListings = document.getElementById('jobListings');

    // Fungsi untuk memuat pekerjaan dari backend
    async function loadJobs() {
      const response = await fetch(API_URL);
      const jobs = await response.json();
      jobListings.innerHTML = ''; // Kosongkan daftar sebelumnya
      jobs.forEach(job => addJobToDOM(job));
    }

    // Fungsi untuk menampilkan pekerjaan di DOM
    function addJobToDOM(job) {
      const jobDiv = document.createElement('div');
      jobDiv.className = 'job-listing';
      jobDiv.dataset.id = job.id;

      jobDiv.innerHTML = `
        <p>Nama Perusahaan: ${job.title}</p>
        <p>Posisi Pekerjaan: ${job.description}</p>
        <p>Gaji: Rp.${job.salary}</p>
        <button onclick="deleteJob(${job.id})">Delete</button>
      `;

      jobListings.appendChild(jobDiv);
    }

    // Fungsi untuk menambahkan pekerjaan
    jobForm.addEventListener('submit', async (e) => {
      e.preventDefault();

      const title = document.getElementById('jobInput').value;
      const description = document.getElementById('jobDescription').value;
      const salary = document.getElementById('jobSalary').value;

      const response = await fetch(API_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ title, description, salary }),
      });

      if (response.ok) {
        const newJob = await response.json();
        addJobToDOM(newJob); // Tambahkan ke UI
        jobForm.reset();
      } else {
        alert('Failed to add job!');
      }
    });

    // Fungsi untuk menghapus pekerjaan
    async function deleteJob(id) {
      const response = await fetch(`${API_URL}/${id}`, { method: 'DELETE' });
      if (response.ok) {
        document.querySelector(`.job-listing[data-id="${id}"]`).remove();
      } else {
        alert('Failed to delete job!');
      }
    }

    // Muat data awal
    loadJobs();
  </script>
</body>
</html>